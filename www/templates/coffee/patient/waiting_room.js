// Generated by CoffeeScript 1.6.3
(function() {
  var WaitingRoom, init_waiting_room,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WaitingRoom = (function() {
    function WaitingRoom() {
      this.doctor_call_ended = __bind(this.doctor_call_ended, this);
      this.doctor_call_started = __bind(this.doctor_call_started, this);
      this.patient_left = __bind(this.patient_left, this);
      this.doctor_joined = __bind(this.doctor_joined, this);
      this.doctor_left = __bind(this.doctor_left, this);
      this.joined = __bind(this.joined, this);
      this.join_room = __bind(this.join_room, this);
      var configs, webrtcReady,
        _this = this;
      this.socket = '';
      this.number_of_patients_ahead = ko.observable();
      this.session_ended = ko.observable(false);
      this.call_started = ko.observable(false);
      this.joined_room = ko.observable();
      this.ready_to_call = ko.observable(false);
      configs = {
        localVideoEl: 'localPatientVideo',
        remoteVideosEl: 'patientRemotesVideos',
        autoRequestMedia: true,
        url: 'http://localhost:8887'
      };
      this.webrtc = new SimpleWebRTC(configs);
      webrtcReady = function() {
        _this.ready_to_call(true);
        return _this.join_room();
      };
      this.webrtc.on('readyToCall', webrtcReady);
    }

    WaitingRoom.prototype.join_room = function() {
      this.socket = io.connect('http://localhost:8886', {
        query: "waiting_room_number=bar"
      });
      this.socket.on('joined', this.joined);
      this.socket.on('doctor_left', this.doctor_left);
      this.socket.on('doctor_joined', this.doctor_joined);
      this.socket.on('patient_left', this.patient_left);
      this.socket.on('doctor_call_started', this.doctor_call_started);
      return this.socket.on('doctor_call_ended', this.doctor_call_ended);
    };

    WaitingRoom.prototype.joined = function(data) {
      console.log('joined');
      console.log(data);
      return this.number_of_patients_ahead(parseInt(data.patients_in_room));
    };

    WaitingRoom.prototype.doctor_left = function(data) {
      return console.log('doctor left the waiting room');
    };

    WaitingRoom.prototype.doctor_joined = function(data) {
      return console.log('doctor joined the waiting room');
    };

    WaitingRoom.prototype.patient_left = function(data) {
      var patients_ahead;
      console.log('patient left the waiting room');
      patients_ahead = this.number_of_patients_ahead() - 1;
      return this.number_of_patients_ahead(patients_ahead);
    };

    WaitingRoom.prototype.doctor_call_started = function(data) {
      console.log('doctor started a call');
      console.log(data);
      this.call_started(true);
      return this.webrtc.joinRoom(data.room_token);
    };

    WaitingRoom.prototype.doctor_call_ended = function(data) {
      console.log('doctor ended a call');
      this.call_started(false);
      this.session_ended(true);
      this.webrtc.leaveRoom(this.joined_room());
      return this.webrtc.stopLocalVideo();
    };

    return WaitingRoom;

  })();

  init_waiting_room = function() {
    window.tokdoc.waiting_room = new WaitingRoom();
    return ko.applyBindings(window.tokdoc.waiting_room, document.getElementById("patient_waiting_room"));
  };

  window.tokdoc.init_waiting_room = init_waiting_room;

}).call(this);

/*
//@ sourceMappingURL=waiting_room.map
*/
