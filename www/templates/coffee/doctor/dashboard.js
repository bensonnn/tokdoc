// Generated by CoffeeScript 1.6.3
(function() {
  var Dashboard, Patient,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.tokdoc.navbar.show_user_login(false);

  Patient = (function() {
    function Patient() {
      this.end_call = __bind(this.end_call, this);
      this.end_and_answer = __bind(this.end_and_answer, this);
      this.full_name = ko.observable();
      this.problem = ko.observable();
      this.age = ko.observable();
      this.webrtc = ko.observable();
    }

    Patient.prototype.end_and_answer = function() {
      return console.log('end and answer');
    };

    Patient.prototype.end_call = function() {
      var new_patient;
      console.log('end call');
      return new_patient = window.tokdoc.dashboard.answer_next_patient();
    };

    return Patient;

  })();

  Dashboard = (function() {
    function Dashboard() {
      var patient_1, patient_2, patient_3;
      patient_1 = new Patient();
      patient_1.full_name("Vijay Selvaraj");
      patient_1.problem("cough");
      patient_1.age("age 32");
      patient_2 = new Patient();
      patient_2.full_name("John Brown");
      patient_2.problem("problem 2");
      patient_2.age("age 1");
      patient_3 = new Patient();
      patient_3.full_name("Kelly Simons");
      patient_3.problem("stomach issue");
      patient_3.age("2");
      this.waiting_patients = ko.observableArray([patient_2, patient_3]);
      this.speaking_with_patient = ko.observable(patient_1);
      this.socket = io.connect('http://localhost:8887/');
      this.init_video();
    }

    Dashboard.prototype.init_video = function() {
      var configs, joinRoom, room_created,
        _this = this;
      configs = {
        localVideoEl: 'localVideo',
        remoteVideosEl: 'remoteVideo',
        autoRequestMedia: true,
        url: 'http://localhost:8887'
      };
      this.webrtc = new SimpleWebRTC(configs);
      joinRoom = function(room) {
        console.log('joining room ' + room);
        return _this.webrtc.joinRoom(room);
      };
      room_created = function(room) {
        console.log('room created!');
        console.log(room);
        return joinRoom(room);
      };
      this.socket.on('room_created', room_created);
      this.socket.emit('create_room', {});
      return this.webrtc.on('readyToCall', joinRoom);
    };

    Dashboard.prototype.new_waiting_patient = function(patient) {
      return this.waiting_patients.push(patient);
    };

    Dashboard.prototype.answer_next_patient = function() {
      var patient, patients;
      patients = window.tokdoc.dashboard.waiting_patients.peek();
      if (patients) {
        patient = patients[0];
        window.tokdoc.dashboard.waiting_patients.remove(patient);
        return window.tokdoc.dashboard.speaking_with_patient(patient);
      }
    };

    return Dashboard;

  })();

  window.tokdoc.dashboard = new Dashboard();

  ko.applyBindings(window.tokdoc.dashboard, document.getElementById("dashboard"));

}).call(this);

/*
//@ sourceMappingURL=dashboard.map
*/
