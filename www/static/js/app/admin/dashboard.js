// Generated by CoffeeScript 1.6.3
(function() {
  var WaitingQueueAdminDashboard, WaitingRoom,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WaitingRoom = (function() {
    function WaitingRoom(room, room_data) {
      console.log('WaitingRoom');
      console.log(room);
      console.log(room_data);
      this.waiting_room_number = ko.observable(room);
      this.users_waiting = ko.observable(room_data.length);
    }

    return WaitingRoom;

  })();

  WaitingQueueAdminDashboard = (function() {
    function WaitingQueueAdminDashboard() {
      this.user_left_room = __bind(this.user_left_room, this);
      this.user_joined_room = __bind(this.user_joined_room, this);
      this.waiting_room_created = __bind(this.waiting_room_created, this);
      this.admin_init = __bind(this.admin_init, this);
      this.socket = io.connect('http://localhost:8886');
      this.waiting_rooms = ko.observableArray();
      this.selected_waiting_room = ko.observable();
      this.socket.on('admin_waiting_room_created', this.waiting_room_created);
      this.socket.on('admin_user_joined_room', this.user_joined_room);
      this.socket.on('admin_user_left_room', this.user_left_room);
      this.socket.on('admin_init', this.admin_init);
      this.socket.emit('admin_init');
    }

    WaitingQueueAdminDashboard.prototype.admin_init = function(data) {
      var room, room_data, waiting_room, _i, _len, _ref, _results;
      console.log(data.waitingQueues);
      this.waiting_rooms([]);
      _ref = Object.keys(data.waitingQueues);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        room = _ref[_i];
        console.log(room);
        room_data = data.waitingQueues[room];
        waiting_room = new WaitingRoom(room, room_data);
        this.waiting_rooms.push(waiting_room);
        _results.push(this.selected_waiting_room(waiting_room));
      }
      return _results;
    };

    WaitingQueueAdminDashboard.prototype.waiting_room_created = function(data) {
      var room, room_data, waiting_room, _i, _len, _ref, _results;
      console.log('created waiting room');
      _ref = Object.keys(data.waitingQueues);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        room = _ref[_i];
        console.log(room);
        room_data = data.waitingQueues[room];
        waiting_room = new WaitingRoom(room, room_data);
        _results.push(this.waiting_rooms.push(waiting_room));
      }
      return _results;
    };

    WaitingQueueAdminDashboard.prototype.user_joined_room = function(data) {
      console.log('user joined room');
      return console.log(data);
    };

    WaitingQueueAdminDashboard.prototype.user_left_room = function(data) {
      return console.log('user left the room');
    };

    return WaitingQueueAdminDashboard;

  })();

  window.tokdoc.dashboard = new WaitingQueueAdminDashboard();

  ko.applyBindings(window.tokdoc.dashboard, document.getElementById("dashboard"));

}).call(this);
