// Generated by CoffeeScript 1.6.3
(function() {
  var WaitingRoom, init_waiting_room,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  WaitingRoom = (function() {
    function WaitingRoom() {
      this.end_call = __bind(this.end_call, this);
      this.start_call = __bind(this.start_call, this);
      this.call_started = __bind(this.call_started, this);
      this.patient_left = __bind(this.patient_left, this);
      this.patient_joined = __bind(this.patient_joined, this);
      this.joined = __bind(this.joined, this);
      this.join_room = __bind(this.join_room, this);
      var configs, webrtcReady,
        _this = this;
      this.socket = '';
      this.waiting_queue = ko.observableArray();
      this.room_name = ko.observable();
      this.call_in_progress = ko.observable(false);
      this.joined_room = ko.observable();
      this.readyToCall = ko.observable(false);
      configs = {
        localVideoEl: 'localDoctorVideo',
        remoteVideosEl: 'doctorRemotesVideos',
        autoRequestMedia: true,
        url: 'http://localhost:8887'
      };
      this.webrtc = new SimpleWebRTC(configs);
      webrtcReady = function() {
        _this.readyToCall(true);
        return _this.join_room();
      };
      this.webrtc.on('readyToCall', webrtcReady);
    }

    WaitingRoom.prototype.join_room = function() {
      this.socket = io.connect('http://localhost:8886', {
        query: "waiting_room_number=bar"
      });
      this.socket.on('joined', this.joined);
      this.socket.on('patient_joined', this.patient_joined);
      this.socket.on('patient_left', this.patient_left);
      return this.socket.on('call_started', this.call_started);
    };

    WaitingRoom.prototype.joined = function(data) {
      console.log('joined');
      return console.log(data);
    };

    WaitingRoom.prototype.patient_joined = function(data) {
      return console.log('patient joined the waiting room');
    };

    WaitingRoom.prototype.patient_left = function(data) {
      return console.log('patient left the waiting room');
    };

    WaitingRoom.prototype.call_started = function(data) {
      console.log('call started');
      console.log(data);
      return this.webrtc.joinRoom(data.room_token);
    };

    WaitingRoom.prototype.start_call = function() {
      console.log('start a call with the next patient');
      this.call_in_progress(true);
      return this.socket.emit('process_next_patient', {});
    };

    WaitingRoom.prototype.end_call = function() {
      console.log('end current call');
      this.call_in_progress(false);
      this.socket.emit('disconnect_next_patient', {});
      this.webrtc.leaveRoom(this.joined_room());
      return this.webrtc.stopLocalVideo();
    };

    return WaitingRoom;

  })();

  init_waiting_room = function() {
    window.tokdoc.waiting_room = new WaitingRoom();
    return ko.applyBindings(window.tokdoc.waiting_room, document.getElementById("doctor_waiting_room"));
  };

  window.tokdoc.init_waiting_room = init_waiting_room;

}).call(this);
